/*
 * --------------------------------------------------------------------------------
 * Copyright (c) 2022-NOW(至今) 锋楪技术团队
 * Author: 锋楪技术团队 (https://www.frontleaves.com)
 *
 * 本文件包含锋楪技术团队项目的源代码，项目的所有源代码均遵循 MIT 开源许可证协议。
 * --------------------------------------------------------------------------------
 * 许可证声明：
 *
 * 版权所有 (c) 2022-2025 锋楪技术团队。保留所有权利。
 *
 * 本软件是“按原样”提供的，没有任何形式的明示或暗示的保证，包括但不限于
 * 对适销性、特定用途的适用性和非侵权性的暗示保证。在任何情况下，
 * 作者或版权持有人均不承担因软件或软件的使用或其他交易而产生的、
 * 由此引起的或以任何方式与此软件有关的任何索赔、损害或其他责任。
 *
 * 使用本软件即表示您了解此声明并同意其条款。
 *
 * 有关 MIT 许可证的更多信息，请查看项目根目录下的 LICENSE 文件或访问：
 * https://opensource.org/licenses/MIT
 * --------------------------------------------------------------------------------
 * 免责声明：
 *
 * 使用本软件的风险由用户自担。作者或版权持有人在法律允许的最大范围内，
 * 对因使用本软件内容而导致的任何直接或间接的损失不承担任何责任。
 * --------------------------------------------------------------------------------
 */

/**
 * # StudentEntity
 *
 * > 代表学生实体的数据结构，包含了学生的各种信息，如姓名、学号、班级等。
 *
 * 该数据结构用于在应用程序中存储和传递学生相关信息。其中某些字段是可选的，表示这些信息可能不总是可用或必要。
 *
 * @param {string} [clazz] - 班级。注意：由于 `class` 为 Java 保留关键字，此处使用 `clazz` 表示班级。
 * @param {number} [created_at] - 创建时间（单位：毫秒时间戳）。
 * @param {string} [department] - 学院。
 * @param {number} [gender] - 性别（0：女，1：男）。
 * @param {string} [grade] - 年级。
 * @param {string} [id] - 学号。
 * @param {string} [major] - 专业。
 * @param {string} [name] - 学生姓名。
 * @param {string} [student_uuid] - 学生主键。
 * @param {number} [updated_at] - 更新时间（单位：毫秒时间戳）。
 * @param {string} [user_uuid] - 对应用户主键。
 * @param {[property: string]: any} - 允许扩展属性。
 */
export type StudentEntity = {
    /**
     * 班级
     * <p>
     * 注意：由于 class 为 Java 保留关键字，此处使用 clazz 表示班级。
     * </p>
     */
    clazz?: string;
    /**
     * 创建时间（单位：毫秒时间戳）
     */
    created_at?: number;
    /**
     * 学院
     */
    department?: string;
    /**
     * 性别（0：女，1：男）
     */
    gender?: number;
    /**
     * 年级
     */
    grade?: string;
    /**
     * 学号
     */
    id?: string;
    /**
     * 专业
     */
    major?: string;
    /**
     * 学生姓名
     */
    name?: string;
    /**
     * 学生主键
     */
    student_uuid?: string;
    /**
     * 更新时间（单位：毫秒时间戳）
     */
    updated_at?: number;
    /**
     * 对应用户主键
     */
    user_uuid?: string;
    /**
     * 学生状态
     */
    status: number;
}
