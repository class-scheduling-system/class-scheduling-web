/*
 * --------------------------------------------------------------------------------
 * Copyright (c) 2022-NOW(至今) 锋楪技术团队
 * Author: 锋楪技术团队 (https://www.frontleaves.com)
 *
 * 本文件包含锋楪技术团队项目的源代码，项目的所有源代码均遵循 MIT 开源许可证协议。
 * --------------------------------------------------------------------------------
 * 许可证声明：
 *
 * 版权所有 (c) 2022-2025 锋楪技术团队。保留所有权利。
 *
 * 本软件是“按原样”提供的，没有任何形式的明示或暗示的保证，包括但不限于
 * 对适销性、特定用途的适用性和非侵权性的暗示保证。在任何情况下，
 * 作者或版权持有人均不承担因软件或软件的使用或其他交易而产生的、
 * 由此引起的或以任何方式与此软件有关的任何索赔、损害或其他责任。
 *
 * 使用本软件即表示您了解此声明并同意其条款。
 *
 * 有关 MIT 许可证的更多信息，请查看项目根目录下的 LICENSE 文件或访问：
 * https://opensource.org/licenses/MIT
 * --------------------------------------------------------------------------------
 * 免责声明：
 *
 * 使用本软件的风险由用户自担。作者或版权持有人在法律允许的最大范围内，
 * 对因使用本软件内容而导致的任何直接或间接的损失不承担任何责任。
 * --------------------------------------------------------------------------------
 */

/**
 * # RoleEntity
 *
 * > 代表系统中的角色实体，包含角色名称、状态、唯一标识符以及权限等信息。
 *
 * 此类型用于定义系统内角色的基本属性和状态。它主要用于数据传输对象（DTO）或作为数据库模型的一部分。
 *
 * @param {number} created_at - 角色创建的时间戳。
 * @param {string[]} [permission] - 可选参数，角色所拥有的权限列表。
 * @param {string} role_name - 角色的名称。
 * @param {number} role_status - 角色的状态码，用于表示角色是否激活等状态。
 * @param {string} role_uuid - 角色的全局唯一标识符。
 * @param {number} updated_at - 角色信息最后一次更新的时间戳。
 *
 * @returns 无直接返回值；该类型定义了一种结构，用于在应用程序的不同部分之间传递角色相关信息。
 *
 * @throws 无直接抛出异常；但根据使用上下文，在处理RoleEntity实例时可能会遇到类型错误或其他运行时异常。
 */
export type RoleEntity = {
    created_at: number;
    permission?: string[];
    role_name: string;
    role_status: number;
    role_uuid: string;
    updated_at: number;
}
